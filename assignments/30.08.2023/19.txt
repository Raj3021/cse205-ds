/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int length = length(head);
        int rmv = length-n+1;
        ListNode prev = null;
        ListNode temp = head;
        for (int i = 1; i < rmv; i++) {
            prev = temp;
            temp = temp.next;
        }
        if (prev == null) {
            head = head.next;
            return head;
        }
        else {
            prev.next = prev.next.next;
            return head;
        }
    }

    public static int length(ListNode head){
        ListNode temp = head;
        int count = 0;
        while (temp != null) {
        count++;
        temp = temp.next;
    }
        return count;
    }
}