/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max;
    public int maxPathSum(TreeNode root) {
        max = Integer.MIN_VALUE;
        help(root);
        return max;
    }

    public int help(TreeNode root){
        if(root == null) return 0;
        int left = help(root.left);
        int right = help(root.right);
        int leftSum = root.val+left;
        int rightSum = root.val+right;
        int tot = root.val + left + right;

        max = Math.max(max,Math.max(Math.max(leftSum,rightSum),Math.max(tot,root.val)));
        return Math.max(Math.max(root.val+left,root.val+right),root.val);
        
    }
}