/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> list = new ArrayList<>();

    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> y = new ArrayList<>();
        levelOrder(root,y);
        return y;
    }


    public void levelOrder(TreeNode root,List<Integer> y) {
        if (root == null)
            return;

    
        Queue<TreeNode> q = new ArrayDeque<>(Arrays.asList(root));

        while(!q.isEmpty()){
            int x = q.size();
            List<Integer> list = new ArrayList<>();
            for(int i=0; i<x;i++){
                TreeNode node = q.remove();    
                list.add(node.val);
                if(node.left!=null)
                q.add(node.left);
                if(node.right!=null)
                q.add(node.right);
            }
            y.add(list.get(list.size()-1));
            list.clear();
        }

    }
}